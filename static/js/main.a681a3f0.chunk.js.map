{"version":3,"sources":["components/Navbar/RightNav.js","components/Navbar/Burger.js","components/Navbar/index.js","components/Home/index.js","actions/action-types.js","components/Toaster/index.js","config.js","history.js","actions/user.js","components/Login/index.js","components/Register/index.js","components/NotFound/index.js","App.js","serviceWorker.js","reducers/globalReducer.js","reducers/userReducer.js","store/index.js","index.js"],"names":["Ul","styled","ul","open","RightNav","className","to","StyledBurger","div","Burger","useState","setOpen","onClick","Navbar","src","alt","Home","Fragment","React","Component","LOGIN_USER_PENDING","LOGIN_USER_SUCCESS","LOGIN_USER_FAILED","REGISTER_USER_PENDING","REGISTER_USER_SUCCESS","REGISTER_USER_FAILED","displayToasterMessage","type","message","toast","success","autoClose","error","CONFIG","API_BASE_URL","extractNumber","strng","match","createHashHistory","loginUserAction","data","dispatch","fetch","method","headers","body","JSON","stringify","email","password","then","res","json","history","push","catch","console","log","loginUserError","registerUserError","registerUserAction","username","status","renderField","input","label","meta","touched","Login","onSubmit","bind","this","props","loginUser","handleSubmit","loading","Field","name","component","id","htmlFor","config","form","validate","values","errors","test","enableReinitialize","keepDirtyOnReinitialize","LoginForm","reduxForm","connect","state","user","Registration","registerUser","confirm_password","SignupForm","NotFound","App","exact","path","Boolean","window","location","hostname","initialState","project_title","globalReducer","userReducer","action","rootReducer","combineReducers","formReducer","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunk","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.a681a3f0.chunk.js","sourcesContent":["import React from 'react';\r\nimport styled from 'styled-components';\r\nimport {Link} from 'react-router-dom';\r\n\r\nconst Ul = styled.ul`\r\n  list-style: none;\r\n  display: flex;\r\n  flex-flow: row nowrap;\r\n  z-index:9;\r\n  li {\r\n    padding: 18px 20px;\r\n  }\r\n  li a{\r\n    font-size: 14px;\r\n    padding: 0 21px;\r\n  }\r\n  @media (max-width: 1023px) {\r\n    flex-flow: column nowrap;\r\n    background-color: #fff;\r\n    position: fixed;\r\n    transform: ${({ open }) => open ? 'translateX(0)' : 'translateX(100%)'};\r\n    top: 0;\r\n    right: 0;\r\n    height: 100vh;\r\n    width: 300px;\r\n    padding-top: 3.5rem;\r\n    transition: transform 0.3s ease-in-out;\r\n    box-shadow: -1px 3px 5px rgba(0, 0, 0, 0.2);\r\n  }\r\n  @media (max-width: 501px) and (min-width: 320px){\r\n    width: 290px;\r\n  }\r\n`;\r\n\r\nconst RightNav = ({ open }) => {\r\n  return (\r\n    <Ul open={open} className=\"navbar-ul\">\r\n      <li><Link to=\"/\">Home</Link></li>\r\n      <li><Link to=\"/login\">Login</Link></li>\r\n      <li><Link to=\"/register\">Register</Link></li>\r\n    </Ul>\r\n  )\r\n}\r\n\r\nexport default RightNav","import React, { useState } from 'react';\r\nimport styled from 'styled-components';\r\nimport RightNav from './RightNav';\r\n\r\nconst StyledBurger = styled.div`\r\n  width: 2rem;\r\n  height: 2rem;\r\n  position: absolute;\r\n  top: 23px;\r\n  right: 20px;\r\n  z-index: 20;\r\n  display: none;\r\n  @media (max-width: 1023px) {\r\n    display: flex;\r\n    justify-content: space-around;\r\n    flex-flow: column nowrap;\r\n    margin-top: 40px;\r\n  }\r\n  @media (max-width: 500px) and (min-width: 320px){\r\n    margin-top: 15px;\r\n  }\r\n  div {\r\n    width: 2rem;\r\n    height: 0.25rem;\r\n    background-color: #861657;\r\n    border-radius: 10px;\r\n    transform-origin: 1px;\r\n    transition: all 0.3s linear;\r\n    &:nth-child(1) {\r\n      transform: ${({ open }) => open ? 'rotate(45deg)' : 'rotate(0)'};\r\n    }\r\n    &:nth-child(2) {\r\n      transform: ${({ open }) => open ? 'translateX(100%)' : 'translateX(0)'};\r\n      opacity: ${({ open }) => open ? 0 : 1};\r\n    }\r\n    &:nth-child(3) {\r\n      transform: ${({ open }) => open ? 'rotate(-45deg)' : 'rotate(0)'};\r\n    }\r\n    @media (max-width: 500px) and (min-width: 320px){\r\n      width: 1.6rem;\r\n      height: 0.2rem;\r\n    }\r\n  }\r\n`;\r\n\r\nconst Burger = () => {\r\n  const [open, setOpen] = useState(false)\r\n  \r\n  return (\r\n    <>\r\n      <StyledBurger open={open} onClick={() => setOpen(!open)}>\r\n        <div />\r\n        <div />\r\n        <div />\r\n      </StyledBurger>\r\n      <RightNav open={open}/>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Burger","import React from 'react';\r\nimport Burger from './Burger';\r\nimport './index.css';\r\nimport {Link} from 'react-router-dom';\r\n\r\nconst Navbar = () => {\r\n  return (\r\n    <div className=\"navbar\">\r\n      <div className=\"logo\">\r\n        <Link to=\"/\"><img src=\"images/logo.png\" className=\"img-fluid\" alt=\"\"/></Link>\r\n      </div>\r\n      <Burger />\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Navbar","import React from 'react';\r\nimport Navbar from '../Navbar/';\r\nimport './index.css';\r\n\r\nclass Home extends React.Component{\r\n\trender(){\r\n\t\treturn(\r\n\t\t\t<React.Fragment>\r\n\t\t\t\t<Navbar/>\r\n\t\t\t\t<div className=\"message\">\r\n\t\t\t\t\t<h3>Welcome to Homepage!</h3>\r\n\t\t\t\t</div>\r\n\t\t\t</React.Fragment>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nexport default Home;","export const LOGIN_USER_PENDING = 'LOGIN_USER_PENDING';\r\nexport const LOGIN_USER_SUCCESS = 'LOGIN_USER_SUCCESS';\r\nexport const LOGIN_USER_FAILED = 'LOGIN_USER_FAILED';\r\nexport const REGISTER_USER_PENDING = 'REGISTER_USER_PENDING';\r\nexport const REGISTER_USER_SUCCESS = 'REGISTER_USER_SUCCESS';\r\nexport const REGISTER_USER_FAILED = 'REGISTER_USER_FAILED';","import { toast } from \"react-toastify\";\r\n\r\n\r\nexport function displayToasterMessage(type,message){\r\n\treturn type==='success'? toast.success(message,{autoClose:3000}) : toast.error(message,{autoClose:3000})\r\n}","let CONFIG = {\r\n\t// API_BASE_URL: 'http://46.101.240.17:8001/api',\r\n\tAPI_BASE_URL: 'https://reqres.in/api/users/api',\r\n\textractNumber: function(strng){\r\n\t\treturn strng.match(/\\d/g)[0];\r\n\t}\r\n}\r\n\r\nexport default CONFIG;","import { createHashHistory } from 'history'\r\n\r\nexport default createHashHistory();","import {\r\n    LOGIN_USER_PENDING,\r\n    LOGIN_USER_SUCCESS,\r\n    LOGIN_USER_FAILED,\r\n    REGISTER_USER_PENDING,\r\n    REGISTER_USER_SUCCESS,\r\n    REGISTER_USER_FAILED    \r\n} from './action-types';\r\n\r\nimport {displayToasterMessage} from '../components/Toaster/';\r\nimport CONFIG from '../config';\r\nimport history from '../history';\r\n\r\nfunction loginUserPending() {\r\n    return {\r\n        type: LOGIN_USER_PENDING\r\n    }\r\n}\r\n\r\nfunction loginUserSuccess(data){\r\n    return {\r\n        type: LOGIN_USER_SUCCESS\r\n    }\r\n}\r\n\r\nfunction loginUserError(error){\r\n    console.log(error);\r\n    return{\r\n        type: LOGIN_USER_FAILED\r\n    }\r\n}\r\n\r\nexport function loginUserAction(data) {\r\n    return function(dispatch){\r\n        dispatch(loginUserPending());\r\n        fetch(CONFIG.API_BASE_URL+'/users',{\r\n              method: 'POST',\r\n              headers: {\r\n                'Accept': 'application/json',\r\n                'Content-Type': 'application/json'\r\n              },\r\n              body: JSON.stringify({email:data.email, password: data.password})\r\n            })\r\n            .then(res => res.json())\r\n            .then(json => {\r\n              displayToasterMessage('success','User logged in successfully!');\r\n              dispatch(loginUserSuccess(json));\r\n              history.push('/dashboard');              \r\n            })\r\n            .catch(error => {\r\n                displayToasterMessage('error','Network request failed!');                \r\n                dispatch(loginUserError(error))\r\n            });            \r\n    }\r\n}\r\n\r\nfunction registerUserPending() {\r\n    return {\r\n        type: REGISTER_USER_PENDING\r\n    }\r\n}\r\n\r\nfunction registerUserSuccess(message){\r\n    return {\r\n        type: REGISTER_USER_SUCCESS\r\n    }\r\n}\r\n\r\nfunction registerUserError(){\r\n    return{\r\n        type: REGISTER_USER_FAILED\r\n    }\r\n}\r\n\r\nexport function registerUserAction(data) {\r\n    return function(dispatch){\r\n        dispatch(registerUserPending());\r\n        fetch(CONFIG.API_BASE_URL+'/users',{\r\n            method: 'POST',\r\n            headers: {\r\n                'Accept': 'application/json',\r\n                'Content-Type': 'application/json'\r\n            },\r\n            body: JSON.stringify({username:data.username, email:data.email,password:data.password})\r\n        })\r\n          // .then(res => res.json())\r\n          .then(res => {\r\n              if(res.status===201){\r\n                  displayToasterMessage('success','User registered successfully!');\r\n                  dispatch(registerUserSuccess());\r\n                  history.push('/');\r\n              }else{\r\n                  displayToasterMessage('error','Error occured while registering the user!');\r\n                  dispatch(registerUserError())\r\n              }\r\n          })\r\n          .catch(error => {\r\n              console.log('inside it', error);\r\n              displayToasterMessage('error','Network request failed!');                \r\n              dispatch(registerUserError());\r\n          });        \r\n    }\r\n}\r\n    \r\n","import React from 'react';\r\nimport {connect} from 'react-redux'\r\nimport { reduxForm, Field } from 'redux-form';\r\nimport {Link} from 'react-router-dom';\r\nimport './index.css';\r\nimport Navbar from '../Navbar/';\r\nimport {loginUserAction} from '../../actions/user';\r\n\r\n\r\nconst renderField = ({\r\n  input,\r\n  label,\r\n  type,\r\n  meta: { touched, error }\r\n}) => (\r\n\t<React.Fragment>\r\n      <input {...input} className=\"mb-4\" type={type} />\r\n      {\r\n        touched &&\r\n        (error && <span className=\"form-error-message mb-3\">{error}</span>)\r\n      }\r\n    </React.Fragment>\r\n);\r\n\r\nclass Login extends React.Component{\r\n    constructor(){\r\n    \tsuper();\r\n    \tthis.onSubmit = this.onSubmit.bind(this);\r\n    }\r\n    onSubmit(data) {\r\n        this.props.loginUser(data);\r\n    }\r\n\r\n\trender(){\r\n\t\tvar {handleSubmit,loading} = this.props;\r\n\t\treturn(\r\n\t\t\t<React.Fragment>\r\n\t\t\t\t<Navbar/>\r\n\t\t\t\t\t<div className=\"container-fluid px-1 px-md-5 px-lg-1 px-xl-5 py-5 mx-auto\">\r\n\t\t\t\t\t    <div className=\"card card0 border-0\">\r\n\t\t\t\t\t        <div className=\"row d-flex\">\r\n\t\t\t\t\t            <div className=\"col-lg-6\">\r\n\t\t\t\t\t                <div className=\"card1 pb-5\">\r\n\t\t\t\t\t                    <div className=\"row px-3 justify-content-center mt-4 mb-5 border-line\"> <img src=\"images/login-foreground.png\" className=\"image\" alt=\"\"/> </div>\r\n\t\t\t\t\t                </div>\r\n\t\t\t\t\t            </div>\r\n\t\t\t\t\t            <div className=\"col-lg-6\">\r\n\t\t\t\t\t\t            <div className={loading?'overlay':''}>\r\n\t\t\t\t\t\t\t\t\t\t<img src=\"images/loader.gif\" className=\"loading-img\" alt=\"\" />\r\n\t\t\t\t\t                </div>\r\n\t\t\t\t\t                <div className=\"card2 card border-0 px-4 py-5\">\r\n\t\t\t\t\t                    <form className=\"form\" onSubmit={handleSubmit(this.onSubmit)}>\r\n\t\t\t\t\t\t                    <div className=\"row px-3\"> \r\n\t\t\t\t\t\t                    \t<label className=\"mb-1\">\r\n\t\t\t\t\t\t                            <h6 className=\"mb-0 text-sm\">Email</h6>\r\n\t\t\t\t\t\t                        </label> \r\n                                \t\t\t\t<Field type=\"text\" name=\"email\" component={renderField} />\t\t\t\t\t\t                        \r\n\t\t\t\t\t\t                    </div>\r\n\t\t\t\t\t\t                    <div className=\"row px-3\"> <label className=\"mb-1\">\r\n\t\t\t\t\t\t                            <h6 className=\"mb-0 text-sm\">Password</h6>\r\n\t\t\t\t\t\t                        </label>\r\n                                \t\t\t\t<Field type=\"password\" name=\"password\" component={renderField} />\t\r\n\t\t\t\t\t\t                    </div>\t\t\t\t\t                        \t\t\t\t\t                        \t\t\t\t\t\r\n\t\t\t\t\t\t                    <div className=\"row px-3 mb-4\">\r\n\t\t\t\t\t\t                        <div className=\"custom-control custom-checkbox custom-control-inline\"> <input id=\"chk1\" type=\"checkbox\" name=\"chk\" className=\"custom-control-input\"/> <label htmlFor=\"chk1\" className=\"custom-control-label text-sm\">Remember me</label> </div> <Link to=\"/forgot-password\" className=\"ml-auto mb-0 text-sm\">Forgot Password?</Link>\r\n\t\t\t\t\t\t                    </div>\r\n\t\t\t\t\t\t                    <div className=\"row mb-3 px-3\"> <button type=\"submit\" className=\"btn login-btn text-center\">Login</button> </div>\r\n\t\t\t\t\t\t                    <div className=\"row mb-4 px-3\"> <small className=\"font-weight-bold\">Don't have an account? <Link to=\"/register\" className=\"text-danger \">Register</Link></small> </div>\r\n\t\t\t\t\t                \t</form>\r\n\t\t\t\t\t                </div>\r\n\t\t\t\t\t            </div>\r\n\t\t\t\t\t        </div>\r\n\t\t\t\t\t    </div>\r\n\t\t\t\t\t</div>\r\n\t\t\t</React.Fragment>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nconst validate = values => {\r\n  const errors = {}\r\n  const regex = /^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i;\r\n  \r\n  if(!values.email){\r\n    errors.email = 'Email is required!'\r\n  }\r\n  if(!regex.test(values.email)){\r\n    errors.email = 'Invalid email address'\r\n  }\r\n  if(!values.password){\r\n    errors.password = 'Password is required!'\r\n  }\r\n  return errors \r\n}\r\n\r\nconst config = {\r\n  form: 'loginUserForm',\r\n  validate,\r\n  enableReinitialize: true,\r\n  keepDirtyOnReinitialize: true\r\n}\r\n\r\nlet LoginForm = reduxForm(config)(Login);\r\n\r\nconst mapStateToProps = (state) =>{\r\n    return{\r\n        loading: state.user.loading\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) =>{\r\n    return{\r\n        loginUser: (data)=>{dispatch(loginUserAction(data))}\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps,mapDispatchToProps)(LoginForm);","import React from 'react';\r\nimport { reduxForm, Field } from 'redux-form';\r\nimport {connect} from 'react-redux';\r\nimport {Link} from 'react-router-dom';\r\nimport Navbar from '../Navbar/';\r\nimport './index.css';\r\nimport {registerUserAction} from '../../actions/user';\r\n\r\nconst renderField = ({\r\n  input,\r\n  label,\r\n  type,\r\n  meta: { touched, error }\r\n}) => (\r\n\t<React.Fragment>\r\n      <input {...input} className=\"mb-4\" type={type} />\r\n      {\r\n        touched &&\r\n        (error && <span className=\"form-error-message mb-3\">{error}</span>)\r\n      }\r\n    </React.Fragment>\r\n);\r\n\r\nclass Registration extends React.Component{\r\n    constructor(){\r\n    \tsuper();\r\n    \tthis.onSubmit = this.onSubmit.bind(this);\r\n    }\r\n    onSubmit(data) {\r\n        this.props.registerUser(data);\r\n    }    \r\n\trender(){\r\n\t\tvar {handleSubmit,loading} = this.props;\r\n\t\treturn(\r\n\t\t\t<React.Fragment>\r\n\t\t\t\t<Navbar/>\r\n\t\t\t\t<div className=\"container-fluid px-1 px-md-5 px-lg-1 px-xl-5 py-5 mx-auto\">\r\n\t\t\t\t    <div className=\"card card0 border-0\">\r\n\t\t\t\t        <div className=\"row d-flex\">\r\n\t\t\t\t            <div className=\"col-lg-6\">\r\n\t\t\t\t                <div className=\"card1 pb-5\">\r\n\t\t\t\t                    <div className=\"row px-3 justify-content-center mt-4 mb-5 border-line\"> <img src=\"images/login-foreground.png\" className=\"image\" alt=\"\"/> </div>\r\n\t\t\t\t                </div>\r\n\t\t\t\t            </div>\r\n\t\t\t\t            <div className=\"col-lg-6\">\r\n\t\t\t\t                <div className={loading?'overlay':''}>\r\n\t\t\t\t\t\t\t\t\t<img src=\"images/loader.gif\" className=\"loading-img\" alt=\"\" />\r\n\t\t\t\t                </div>\r\n\t\t\t\t                <div className=\"card2 card border-0 px-4 py-5\">\r\n\t\t\t\t                    <form className=\"form\" onSubmit={handleSubmit(this.onSubmit)}>\r\n\t\t\t\t\t                    <div className=\"row px-3\"> <label className=\"mb-1\">\r\n\t\t\t\t\t                            <h6 className=\"mb-0 text-sm\">Username</h6>\r\n\t\t\t\t\t                        </label> \r\n\t\t\t\t\t\t\t\t\t\t\t<Field type=\"text\" name=\"username\" component={renderField} />\r\n\t\t\t\t\t                    </div>\r\n\t\t\t\t\t                    <div className=\"row px-3\"> <label className=\"mb-1\">\r\n\t\t\t\t\t                            <h6 className=\"mb-0 text-sm\">Email</h6>\r\n\t\t\t\t\t                        </label> \r\n\t\t\t\t\t\t\t\t\t\t\t<Field type=\"text\" name=\"email\" component={renderField} />\r\n\t\t\t\t\t                    </div>\r\n\t\t\t\t\t                    <div className=\"row px-3\"> <label className=\"mb-1\">\r\n\t\t\t\t\t                            <h6 className=\"mb-0 text-sm\">Password</h6>\r\n\t\t\t\t\t                        </label> \r\n\t\t\t\t\t\t\t\t\t\t\t<Field type=\"password\" name=\"password\" component={renderField} />\r\n\t\t\t\t\t                    </div>\r\n\t\t\t\t\t                    <div className=\"row px-3\"> <label className=\"mb-1\">\r\n\t\t\t\t\t                            <h6 className=\"mb-0 text-sm\">Confirm Password</h6>\r\n\t\t\t\t\t                        </label> \r\n\t\t\t\t\t\t\t\t\t\t\t<Field type=\"password\" name=\"confirm_password\" component={renderField} />\r\n\t\t\t\t\t                    </div>\r\n\t\t\t\t\t                    <div className=\"row mb-3 px-3\"> <button type=\"submit\" className=\"btn register-btn text-center\">Register</button> </div>\r\n\t\t\t\t\t                    <div className=\"row mb-4 px-3\"> <small className=\"font-weight-bold\">Already have an account? <Link to=\"/login\" className=\"text-danger\">Login</Link></small> </div>\r\n\t\t\t\t                   \t</form>\r\n\t\t\t\t                </div>\r\n\t\t\t\t            </div>\r\n\t\t\t\t        </div>\r\n\t\t\t\t    </div>\r\n\t\t\t\t</div>\r\n\t\t\t</React.Fragment>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nconst validate = values => {\r\n  const errors = {}\r\n  const regex = /^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i;\r\n  \r\n  if(!values.username){\r\n    errors.username = 'Username is required!'\r\n  }  \r\n\r\n  if(!values.email){\r\n    errors.email = 'Email address is required!'\r\n  }\r\n\r\n  if(!regex.test(values.email)){\r\n    errors.email = 'Invalid email address'\r\n  }\r\n\r\n  if(!values.password){\r\n    errors.password = 'Password is required!'\r\n  }\r\n  \r\n  if(!values.confirm_password){\r\n    errors.confirm_password = 'Confirm Password is required!'\r\n  }\r\n\r\n  if(values.password!==values.confirm_password){\r\n  \terrors.confirm_password = 'Both passwords should be same!'\r\n  } \r\n  return errors \r\n}\r\n\r\nconst config = {\r\n  form: 'RegistrationForm',\r\n  validate,\r\n  enableReinitialize: true,\r\n  keepDirtyOnReinitialize: true\r\n}\r\n\r\nlet SignupForm = reduxForm(config)(Registration);\r\n\r\nconst mapStateToProps = (state) =>{\r\n    return{\r\n        loading: state.user.loading    \t\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) =>{\r\n    return{\r\n        registerUser: (data)=>{dispatch(registerUserAction(data))}\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps,mapDispatchToProps)(SignupForm);","import React from 'react';\r\nimport Navbar from '../Navbar/';\r\n\r\nclass NotFound extends React.Component{\r\n\trender(){\r\n\t\treturn(\r\n\t\t\t<React.Fragment>\r\n\t\t\t<Navbar/>\r\n\t\t\t<div className=\"container\">\r\n\t\t\t\t<div className=\"row\">\r\n\t\t\t\t\t<div className=\"col-md-12\">\r\n\t\t\t\t\t\t<div className=\"text-center mt-5 mb-5\">\r\n\t\t\t\t\t\t\t<h1 className=\"display-1\">404</h1>\r\n\t\t\t\t\t\t\t<p className=\"lead\">Page not found</p>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t\t</React.Fragment>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nexport default NotFound;","import React from 'react';\nimport {\n  HashRouter as Router,\n  Switch,\n  Route\n} from \"react-router-dom\";\n\nimport Home from './components/Home/';\nimport Login from './components/Login/';\nimport Register from './components/Register/';\nimport NotFound from './components/NotFound/';\nimport { ToastContainer } from \"react-toastify\";\nimport \"react-toastify/dist/ReactToastify.css\";\n\nclass App extends React.Component {\n\trender(){\n\t\treturn (\n\t\t\t<React.Fragment>\n\t\t\t\t<Router>\n\t\t\t\t\t<div>\n\t\t\t\t\t\t<Switch>\n\t\t\t\t\t\t\t<Route exact path=\"/\">\n\t\t\t\t\t\t\t\t<Home />\n\t\t\t\t\t\t\t</Route>\t\t\t\t\t\n\t\t\t\t\t\t\t<Route path=\"/login\">\n\t\t\t\t\t\t\t\t<Login />\n\t\t\t\t\t\t\t</Route>\n\t\t\t\t\t\t\t<Route path=\"/register\">\n\t\t\t\t\t\t\t\t<Register />\n\t\t\t\t\t\t\t</Route>\n\t\t\t\t\t\t\t<Route component={NotFound}/>\t\t\t\t\n\t\t\t\t\t\t</Switch>\n\t\t\t\t\t</div>\n\t\t\t\t</Router>\n\t\t\t\t<ToastContainer />\n\t\t\t</React.Fragment>\t\t\t\n\t\t);\n\t}\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","let initialState = {\r\n\tproject_title:'Data fetching Application'\r\n}\r\n\r\nconst globalReducer = function(state=initialState,action){\r\n\treturn state;\r\n}\r\n\r\nexport default globalReducer;","import {\r\n    LOGIN_USER_PENDING,\r\n    LOGIN_USER_SUCCESS,\r\n    LOGIN_USER_FAILED,\r\n    REGISTER_USER_PENDING,\r\n    REGISTER_USER_SUCCESS,\r\n    REGISTER_USER_FAILED    \r\n} from '../actions/action-types';\r\n\r\nlet initialState = {\r\n\tloading: false\r\n}\r\n\r\nconst userReducer = function(state = initialState, action) {\r\n    switch(action.type) {\r\n        case REGISTER_USER_PENDING: \r\n            return {\r\n                ...state,\r\n                loading: true\r\n            }\r\n        case REGISTER_USER_SUCCESS:\r\n            return {\r\n                ...state,\r\n                loading: false            \r\n            }\r\n        case REGISTER_USER_FAILED:\r\n            return {\r\n                ...state,\r\n                loading: false\r\n            }        \r\n        case LOGIN_USER_PENDING: \r\n            return {\r\n                ...state,\r\n                loading: true\r\n            }\r\n        case LOGIN_USER_SUCCESS:\r\n            return {\r\n                ...state,\r\n                loading: false            \r\n            }\r\n        case LOGIN_USER_FAILED:\r\n            return {\r\n                ...state,\r\n                loading: false\r\n            }\r\n        default: \r\n            return state;\r\n    }\r\n}\r\n\r\nexport default userReducer;","import {createStore,combineReducers,applyMiddleware,compose} from 'redux';\r\nimport globalReducer from '../reducers/globalReducer';\r\nimport userReducer from '../reducers/userReducer';\r\nimport { reducer as formReducer } from 'redux-form';\r\nimport thunk from 'redux-thunk';\r\n\r\nlet rootReducer = combineReducers({\r\n\tglobalReducer:globalReducer,\r\n\tuser: userReducer,\r\n\tform: formReducer\t\r\n});\r\n\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\nconst store = createStore(rootReducer, composeEnhancers(applyMiddleware(...[thunk])));\r\n\r\nwindow.store = store;\r\n\r\nexport default store;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport {Provider} from 'react-redux';\nimport store from './store/'\n\n\nReactDOM.render(<Provider store={store}><App/></Provider>, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}